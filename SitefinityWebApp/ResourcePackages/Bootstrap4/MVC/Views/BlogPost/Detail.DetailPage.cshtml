@model Telerik.Sitefinity.Frontend.Mvc.Models.ContentDetailsViewModel

@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Web.DataResolving;

@*used to get related image*@
@using Telerik.Sitefinity.RelatedData;
@using Telerik.Sitefinity.Blogs.Model;
@using Telerik.Sitefinity.Libraries.Model;

@using Telerik.Sitefinity.Model;


@*used to get related tags and categories*@
@using Telerik.Sitefinity.Web;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;


@*used to get latest blogs*@
@using System.Collections.Generic;
@using System.Linq;
@using Telerik.Sitefinity.Blogs.Model;
@using Telerik.Sitefinity.GenericContent.Model;
@using Telerik.Sitefinity.Modules.Blogs;
@using Telerik.Sitefinity.Services;

@{
    BlogsManager blogsManager = BlogsManager.GetManager();
    var blogPostList = blogsManager.GetBlogPosts().Where(b => b.Status == ContentLifecycleStatus.Live).ToList().OrderByDescending(n => n.PublicationDate).Take(3);
}

<div class="@Model.CssClass blog-page-detail" @Html.InlineEditingAttributes(Model.ProviderName, Model.ContentType.FullName, (Guid)Model.Item.Fields.Id)>
    <div class="blog-page-detail__inner">
        <div class="blog-page-detail__publication-date">
            <span class="blog-page-detail__publication-date-text"><time>@Model.Item.GetDateTime("PublicationDate", "dd MMM yyyy")</time></span>
        </div>
        <div class="blog-page-detail__title">
            <h1 class="blog-page-detail__title-text" @Html.InlineEditingFieldAttributes("Title", "ShortText")>@Model.Item.Fields.Title</h1>
        </div>
        @{
            var contentItem = (@Model.Item.DataItem as BlogPost);
            var image = contentItem.GetRelatedItems<Image>("Image").ToList();
        }
        <div class="blog-page-detail__image-wrapper">
            @if (image.Count() != 0)
            {
                var selectedimage = image.FirstOrDefault();
                <img class="blog-page-detail__image" src="@selectedimage.Url" title="@selectedimage.AlternativeText" alt="@selectedimage.AlternativeText" />
            }
            else
            {
                <img class="blog-page-detail__image" src="/ResourcePackages/Bootstrap4/assets/images/card-default.jpg" title="" alt="" />
            }
        </div>
        @if (String.IsNullOrEmpty(Model.Item.Fields.Author))
        {
            // @DataResolver.Resolve(Model.Item.DataItem, "Author", null);
        }
        else
        {
            <div class="blog-page-detail__author">
                <span class="blog-page-detail__author-text" @Html.InlineEditingFieldAttributes("Author", "ShortText")>@Model.Item.Fields.Author</span>
            </div>
        }
        <div class="blog-page-detail__content content-area" @Html.InlineEditingFieldAttributes("Content", "LongText")>
            @Html.HtmlSanitize((string)Model.Item.Fields.Content)
        </div>
        <div class="blog-page-detail__tags">
            <div class="tags">
                <div class="tags__header">
                    <h3 class="tags__header-text">Tags</h3>
                </div>
                @{
                    var currentPageName = SiteMapBase.GetActualCurrentNode();
                    var listPage = currentPageName as PageSiteNode;
                    string currentPageUrl = listPage.Url.ToString().Replace("~/", "/");
                }
                <ul class="tags__list">
                    @if (@Model.Item.Fields.Tags != null)
                    {
                        foreach (var taxon in @Model.Item.GetFlatTaxons("Tags"))
                        {
                            <li class="tags__list__item">
                                <a class="tags__list__link" href="@currentPageUrl/-in-tags/tags/@taxon.UrlName.ToString()">@taxon.Title.ToString()</a>
                            </li>
                        }
                    }
                    @if (@Model.Item.Fields.Category != null)
                    {
                        foreach (var taxon in @Model.Item.GetHierarchicalTaxons("Category"))
                        {
                            <li class="tags__list__item">
                                <a class="tags__list__link" href="@currentPageUrl/-in-categories/categories/@taxon.UrlName.ToString()">@taxon.Title.ToString()</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

@if (blogPostList != null)
{
    var currentPageNameLatest = SiteMapBase.GetActualCurrentNode().ParentNode;
    var listPageLatest = currentPageName as PageSiteNode;
    string currentPageUrlLatest = listPage.Url.ToString().Replace("~/", "/");

    <div class="latest-articles">
        <div class="latest-articles__inner">
            <div class="latest-articles__title">
                <h3 class="latest-articles__title-text">Latest articles</h3>
            </div>
            <div class="latest-articles__list">
                <ul class="content-list content-list--with-title">
                    @foreach (BlogPost item in blogPostList)
                    {
                        var categories = (Telerik.OpenAccess.TrackedList<System.Guid>)item.GetValue("Category");
                        var tags = (Telerik.OpenAccess.TrackedList<System.Guid>)item.GetValue("Tags");
                        TaxonomyManager taxaManager = TaxonomyManager.GetManager();
                        var catlist = taxaManager.GetTaxa<HierarchicalTaxon>().Where(t => categories.Contains(t.Id));
                        var taglist = taxaManager.GetTaxa<FlatTaxon>().Where(t => tags.Contains(t.Id));
                        var imageblog = item.GetRelatedItems<Image>("Image").ToList();




                        var navigateUrl = currentPageUrlLatest + item.ItemDefaultUrl;

                        <li class="content-list__item content-list__item--border-bottom">
                            <div class="content-list__image-wrapper">
                                @if (imageblog.Count() != 0)
                                {
                                    var selectedimage = imageblog.FirstOrDefault();
                                    <img class="content-list__image" src="@selectedimage.Url" title="@selectedimage.AlternativeText" alt="@selectedimage.AlternativeText" />
                                }
                                else
                                {
                                    <img class="content-list__image" src="/ResourcePackages/Bootstrap4/assets/images/placeholder.jpg" title="" alt="" />
                                }
                            </div>
                            <div class="content-list__detail">
                                <div class="blog-list-detail">
                                    <div class="blog-list-detail__tags">
                                        <ul class="blog-list-detail__tags-list">
                                            @if (@Model.Item.Fields.Tags != null)
                                            {
                                                foreach (var taxon in taglist)
                                                {
                                                    <li class="blog-list-detail__tags-list__item">
                                                        <a class="blog-list-detail__tags-list__link" href="@currentPageUrlLatest/-in-tags/tags/@taxon.UrlName.ToString()">@taxon.Title.ToString()</a>
                                                    </li>
                                                }
                                            }
                                            @if (@Model.Item.Fields.Category != null)
                                            {
                                                foreach (var taxon in catlist)
                                                {
                                                    <li class="blog-list-detail__tags-list__item">
                                                        <a href="@currentPageUrlLatest/-in-categories/categories/@taxon.UrlName.ToString()" class="blog-list-detail__tags-list__link">@taxon.Title.ToString()</a>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </div>
                                    <h3 class="blog-list-detail__title">
                                        <a class="blog-list-detail__title-link" @Html.InlineEditingFieldAttributes("Title", "ShortText")  class="blog-list-detail__title-link" href="@navigateUrl">@item.Title.ToString()</a>                                    
                                    </h3>
                                    <div class="blog-list-detail__post-date">
                                        <time>@item.PublicationDate.ToString("dd MMM yyyy")</time>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
}
